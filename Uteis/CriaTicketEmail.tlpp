#Include "Protheus.ch"
#Include "tbiconn.ch"
#INCLUDE "TOTVS.CH"
#INCLUDE "RESTFUL.CH"
#INCLUDE "FWMVCDEF.CH"
#include 'tlpp-core.th'
#include 'tlpp-rest.th
#Include "RwMake.ch"
#INCLUDE "PARMTYPE.CH"
#Include "Ap5Mail.ch"
//#Include "mail.ch"

/*/{Protheus.doc} GET CriaTicketEmail
Criacao de Ticket por e-mail
@author Isaias Gravatal
@since Set/2025
@version 1.0
@param TicketID, Caractere, String que será pesquisada através do MsSeek
@obs 
@see 
/*/

User Function CriaTicketEmail()
	Local cServer     	:= "imap.gmx.com" //"outlook.office365.com"
	Local nServerPort 	:= 993
	Local cSMTP       	:= "mail.gmx.com"
	Local nSMTPPort   	:= 587
	Local cUser       	:= "reports.3corp@gmx.com" //Usuário com @gmail.com
//	Local cToken      	:= getAcssTkn()
	Local cPass       	:= "LFX@238457"//cToken//"y1jpD54D}X#Z"
	Local oSrv        	:= TMailMng():New( 1, 6, 6)   //IMAP
// 	Local oSrv        	:= TMailMng():New( 0, 6, 6 )  //POP
	Local oMsg        	:= TMailMessage():New()
	Local nTimeout    	:= 60
	Local nMessages   	:= 0
	Local nCountMail  	:= 0
	Local nX           	:= 0
	Local cAliasWS      := "Z3A"
	Local cAliasWSC     := "Z3C"
	Local cMailTo     	:= ""
	Local cBody		  	:= ""
	Local cID 			:= ""
	Local cIdUser   	:= ""
	Local lRpcSetEnv  	:= .F.
	Local xRet

	//Se o dicionário não estiver aberto, irá preparar o ambiente
	If Select("SX2") <= 0
		RpcSetType(3)
		RPCSetEnv("01", "01")
		lRpcSetEnv := .T.
	EndIf

	oSrv:cUser := cUser
	oSrv:cPass := cPass

	oSrv:cSrvAddr := cServer
	oSrv:nSrvPort := nServerPort
	oSrv:nSrvTimeout := nTimeout

	oSrv:cSMTPAddr := cSMTP
	oSrv:nSMTPPort := nSMTPPort
	oSrv:nSMTPTimeout := nTimeout

	//oSrv:cOAuthToken := cToken

	xRet := oSrv:Connect()
	if xRet <> 0
		conout( "Erro Connect oSrv: " + oSrv:GetErrorString( xRet ) )
		return
	endif

	oSrv:GetNumMsgs( @nMessages )

	if nMessages > 0
		conout( "GetNumMsgs: " + cValToChar( nMessages ) )
		DbSelectArea(cAliasWSC)
		(cAliasWSC)->(dbSetOrder(3))
		For nCountMail := 1 To nMessages
			Begin Transaction

				xRet := oMsg:Receive2( oSrv, nCountMail )
				if xRet <> 0
					conout( "Erro Receive oSrv: " + oSrv:GetErrorString( xRet ) )
				else
					cIdUser := RetornaIdUser(StrTran(SubStr(oMsg:cFrom, At("<", oMsg:cFrom)+1, Len(oMsg:cFrom)), ">", ""))

					If !"RE:" $ Upper(oMsg:cSubject) .And. !(cAliasWSC)->(MsSeek( oMsg:cMessageID)) .And. !Empty(cIdUser)

						aMailTo := StrTokArr(oMsg:cTo, ",")

						For nX := 1 To Len(aMailTo)
							cMailTo += IIf(nX==1,StrTran(SubStr(aMailTo[nX], At("<", aMailTo[nX])+1, Len(aMailTo[nX])), ">", ""),;
								";"+StrTran(SubStr(aMailTo[nX], At("<", aMailTo[nX])+1, Len(aMailTo[nX])), ">", ""))
						Next nX

						cID := GetSxeNum(cAliasWS,"Z3A_ID")
						//cBody := "<!DOCTYPE html>"
						//cBody += "<html>"
						//cBody += "<head>"
						//cBody += "<style>"
						//cBody += "body { font-family: 'Segoe UI', sans-serif; background-color: #f2f2f2; padding: 20px; color: #333; }"
						//cBody += ".container { background-color: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 0 6px rgba(0,0,0,0.1); }"
						//cBody += "h2 { color: #2c3e50; margin-bottom: 20px; }"
						//cBody += "table { width: 100%; border-collapse: collapse; margin-bottom: 15px; }"
						//cBody += "th, td { border: 1px solid #ccc; padding: 8px 10px; text-align: left; vertical-align: top; }"
						//cBody += "th { background-color: #e8f0fe; font-weight: 600; }"
						//cBody += "tr:nth-child(even) { background-color: #f9f9f9; }"
						//cBody += "</style>"
						//cBody += "</head>"
						//cBody += "<body>"
						cBody += EncodeUTF8(oMsg:cBody, "cp1252")
						//cBody += "</body>"
						//cBody += "</html>"

						If RecLock(cAliasWS, .T.) //.T. Incluir / .F. Alterar
							(cAliasWS)->Z3A_FILIAL := FwxFilial("Z3A")
							(cAliasWS)->Z3A_ID     := cID
							(cAliasWS)->Z3A_CC     :=  StrTran(SubStr(oMsg:cFrom, At("<", oMsg:cFrom)+1, Len(oMsg:cFrom)), ">", "")
							(cAliasWS)->Z3A_ASSUNT := EncodeUTF8(oMsg:cSubject, "cp1252")
							(cAliasWS)->Z3A_DATA   := Date()
							(cAliasWS)->Z3A_HORA   := Time()
							(cAliasWS)->Z3A_ORIGEM := "2"
							(cAliasWS)->Z3A_STATUS := "0"
							//(cAliasWS)->Z3A_INDISP := oObj1:downTime
							//(cAliasWS)->Z3A_EQUIP  := oObj1:equipment
							//(cAliasWS)->Z3A_PROTOC := oObj1:protocol
							//(cAliasWS)->Z3A_OPERAT := oObj1:operator
							(cAliasWS)->Z3A_IDUSER := cIdUser
							//(cAliasWS)->Z3A_IDORG  := oObj1:originId
							//(cAliasWS)->Z3A_SLA    := oObj1:sla
							//(cAliasWS)->Z3A_CONTAT := oObj1:contact
							//(cAliasWS)->Z3A_COMNAM := oObj1:completeName
							(cAliasWS)->Z3A_ULTATI := Date()
							//(cAliasWS)->Z3A_ATRIBU := oObj1:assigned
							//(cAliasWS)->Z3A_TPATEN := oObj1:typeservice
							//(cAliasWS)->Z3A_TECHLI := oObj1:techLeader
							//(cAliasWS)->Z3A_GRUPO  := oObj1:group
							//(cAliasWS)->Z3A_TPTECH := oObj1:typeTech
							(cAliasWS)->Z3A_IDFILA := "000026"
							(cAliasWS)->(MsUnlock())
							ConfirmSx8()
							If !Empty(cID)
								If RecLock(cAliasWSC, .T.)
									(cAliasWSC)->Z3C_FILIAL := FwxFilial("Z3A")
									(cAliasWSC)->Z3C_ID     := GetSxeNum(cAliasWSC,"Z3C_ID")
									(cAliasWSC)->Z3C_IDTICK := cID
									(cAliasWSC)->Z3C_MENSAG := cBody
									(cAliasWSC)->Z3C_DESTIN := cMailTo
									(cAliasWSC)->Z3C_REMETE := StrTran(SubStr(oMsg:cFrom, At("<", oMsg:cFrom)+1, Len(oMsg:cFrom)), ">", "")
									(cAliasWSC)->Z3C_DATA   := Date()
									(cAliasWSC)->Z3C_HORA   := Time()
									(cAliasWSC)->Z3C_IDMAIL := oMsg:cMessageID
									(cAliasWSC)->Z3C_PRIVAD := "0"
									(cAliasWSC)->Z3C_STATUS := "0"

									(cAliasWSC)->(MsUnlock())
									ConfirmSx8()
									oSrv:movemsg(nCountMail, "Lidas")
								Else
									RollbackSx8()
									DisarmTransaction()
									oRest:setStatusCode(400)
									oJson['code']  	  := "400"
									oJson['error']    := 'Erro em reclock de tabela Z3C'
									oJson['solution'] := 'Contate o administrador do sistema'
									//Define o retorno
									oRest:setHeaderResponse(jHeaders)
									oRest:SetResponse(EncodeUTF8(oJson:toJSON()))
									Return(lRet)
								EndIf
							EndIf
						EndIf
					Else
						If !"Ticket" $ oMsg:cSubject
							oSrv:movemsg(nCountMail, "Processada")
						EndIf
					endif
				EndIf
			/*
			conout( "Date:    " + oMsg:cDate )
			conout( "From:    " + oMsg:cFrom )
			conout( "To:      " + oMsg:cTo )
			conout( "Subject: " + oMsg:cSubject )
			conout( "   Body: " + oMsg:cBody )
			*/
			End Transaction
		Next nCountMail
	Else
		conout( "Sem e-mails na fila de e-mails" )

	endif

	xRet := oSrv:Disconnect()
	if xRet <> 0
		conout( "Erro Disconnect oSrv: " + oSrv:GetErrorString( xRet ) )
		return
	endif

	conout( "Disconnect Sucesso!!!" )

	If lRpcSetEnv
		RpcClearEnv() //Encerra o ambiente, fechando as devidas conexões
	EndIf
return


Static Function BodyMail()
	Local cMensagem := ""
	cMensagem += '<!DOCTYPE html>
	cMensagem += '<html>'
	cMensagem += '  <head>'
	cMensagem += '    <style>'
	cMensagem += '      body {'
	cMensagem += '        margin: 0;'
	cMensagem += '        padding: 0;'
	cMensagem += '        font-family: Arial, sans-serif;'
	cMensagem += '        background-color: #f2f2f2;'
	cMensagem += '      }'
	cMensagem += '      .container {'
	cMensagem += '        max-width: 600px;'
	cMensagem += '        margin: auto;'
	cMensagem += '        background-color: #ffffff;'
	cMensagem += '        border: 1px solid #dcdcdc;'
	cMensagem += '        padding: 20px;'
	cMensagem += '      }'
	cMensagem += '      .header {'
	cMensagem += '        background-color: #0a4d8c;'
	cMensagem += '        color: #ffffff;'
	cMensagem += '        text-align: center;'
	cMensagem += '        padding: 30px 20px;'
	cMensagem += '      }'
	cMensagem += '      .header h1 {'
	cMensagem += '        margin: 0;'
	cMensagem += '        font-size: 28px;'
	cMensagem += '      }'
	cMensagem += '      .content {'
	cMensagem += '        padding: 20px;'
	cMensagem += '        color: #333333;'
	cMensagem += '      }'
	cMensagem += '      .content h2 {'
	cMensagem += '        color: #0a4d8c;'
	cMensagem += '      }'
	cMensagem += '      .footer {'
	cMensagem += '        text-align: center;'
	cMensagem += '        font-size: 12px;'
	cMensagem += '        color: #777777;'
	cMensagem += '        padding: 20px;'
	cMensagem += '      }'
	cMensagem += '    </style>'
	cMensagem += '  </head>'
	cMensagem += '  <body>'
	cMensagem += '     <p style="text-align:center;"><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<---------------------------------------- Não escreva Abaixo dessa linha ---------------------------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>></p>'
	cMensagem += '     <div class="container">'
	cMensagem += ''
	cMensagem += '      <div class="header">'
	cMensagem += '        <h1>Bem-vindo à 3Corp!</h1>'
	cMensagem += '      </div>'
	cMensagem += '      <div class="content">'
	cMensagem += '        <h2>Olá Isaias Gravatal,</h2>'
	cMensagem += '        <p>'
	cMensagem += '          É com grande entusiasmo que damos as boas-vindas à nossa equipe! Estamos felizes por você fazer parte da nossa jornada e acreditamos que sua contribuição será fundamental para nosso crescimento.'
	cMensagem += '        </p>'
	cMensagem += '        <p>'
	cMensagem += '          Acreditamos no poder da colaboração, do respeito e da inovação, e temos certeza de que juntos alcançaremos grandes resultados.'
	cMensagem += '        </p>'
	cMensagem += '        <p>'
	cMensagem += '          Sinta-se à vontade para explorar, perguntar e contribuir. Estamos aqui para apoiar seu desenvolvimento e crescimento profissional.'
	cMensagem += '        </p>'
	cMensagem += '        <p>'
	cMensagem += '          Desejamos muito sucesso nesta nova etapa!'
	cMensagem += '        </p>'
	cMensagem += '      </div>'
	cMensagem += '      <div class="footer">'
	cMensagem += '        &copy; 2025 3Corp. Todos os direitos reservados.'
	cMensagem += '      </div>'
	cMensagem += '    </div>'
	cMensagem += '  </body>'
	cMensagem += '</html>'

Return(cMensagem)


Static Function RetornaIdUser(cEmail)
	Local cIdUser  := ""
	Local cAliasWS := GetNextAlias()

	BeginSql alias cAliasWS
    SELECT
        TOP 1 Z3F.Z3F_ID 
    FROM
        %table:Z3F% Z3F
    WHERE
        Z3F.Z3F_FILIAL= %xfilial:Z3F% AND
        Z3F.Z3F_EMAIL = %Exp:cEmail% AND
        Z3F.%notDel% 
	EndSql

	If (cAliasWS)->(!EOF())
		cIdUser := (cAliasWS)->Z3F_ID
	EndIf

	(cAliasWS)->(dbCloseArea())
Return(cIdUser)
